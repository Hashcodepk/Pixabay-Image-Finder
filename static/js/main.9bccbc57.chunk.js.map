{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","AppBar_default","title","ImageResults","state","open","currentImg","handleOpen","img","_this","setState","handleClose","imageListContent","_this2","this","images","props","GridList","cols","map","tags","key","id","subtitile","user","actionIcon","IconButton_default","onClick","largeImageURL","zoom_in_default","color","src","alt","actions","FlatButton_default","label","primary","Dialog_default","modal","onRequestClose","style","width","Component","Search","searchText","amount","apiUrl","apiKey","onTextChange","event","val","target","value","Object","defineProperty","name","axios","get","concat","mode","then","res","data","hits","catch","err","console","log","onAmountChange","index","TextField_default","onChange","floatingLabelText","fullWidth","SelectField_default","MenuItem_default","primaryText","length","image_results_ImageResults","App","MuiThemeProvider_default","navbar_NavBar","className","search_Search","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sTAQeA,EAHA,kBAAMC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,MAAM,wLCsEpBC,6MAlEdC,MAAQ,CACPC,MAAM,EACNC,WAAY,MAGbC,WAAa,SAACC,GACbC,EAAKC,SAAS,CAACL,MAAK,EAAMC,WAAYE,OAGvCG,YAAc,WACbF,EAAKC,SAAS,CAACL,MAAK,6EAGZ,IACLO,EADKC,EAAAC,KAEDC,EAAWD,KAAKE,MAAhBD,OAGPH,EADEG,EAEDjB,EAAAC,EAAAC,cAACiB,EAAA,SAAD,CAAUC,KAAM,GACdH,EAAOI,IAAI,SAAAX,GAAG,OACdV,EAAAC,EAAAC,cAACiB,EAAA,SAAD,CACCf,MAAOM,EAAIY,KACXC,IAAKb,EAAIc,GACTC,UACCzB,EAAAC,EAAAC,cAAA,kBACIF,EAAAC,EAAAC,cAAA,cAASQ,EAAIgB,OAGlBC,WACC3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAY4B,QAAS,kBAAMd,EAAKN,WAAWC,EAAIoB,iBAC9C9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQ+B,MAAM,YAGhBhC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKvB,EAAIoB,cAAeI,IAAI,SAMlB,KAGpB,IAAMC,EAAU,CACfnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAYoC,MAAM,QAAQC,SAAS,EAAMT,QAASb,KAAKH,eAEvD,OACCb,EAAAC,EAAAC,cAAA,WACEY,EACDd,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CACCkC,QAASA,EACTK,OAAO,EACPjC,KAAMS,KAAKV,MAAMC,KACjBkC,eAAgBzB,KAAKH,aACrBb,EAAAC,EAAAC,cAAA,OAAK+B,IAAKjB,KAAKV,MAAME,WAAY0B,IAAI,GAAGQ,MAAO,CAACC,MAAO,mBAvDjCC,aC+DZC,6MA/DdvC,MAAQ,CACPwC,WAAY,GACZC,OAAQ,GACRC,OAAQ,0BACRC,OAAQ,qCACRhC,OAAQ,MAGTiC,aAAe,SAACC,GACf,IAAMC,EAAMD,EAAME,OAAOC,MACzB3C,EAAKC,SAAL2C,OAAAC,EAAA,EAAAD,CAAA,GAAgBJ,EAAME,OAAOI,KAAON,EAAME,OAAOC,OAAQ,WAC7C,KAARF,EACFzC,EAAKC,SAAS,CAACK,OAAO,KAEtByC,IAAMC,IAAN,GAAAC,OAAajD,EAAKL,MAAM0C,OAAxB,4BAAAY,OACYjD,EAAKL,MAAM2C,OADvB,yBAAAW,OAESjD,EAAKL,MAAMwC,WAFpB,mEAAAc,OAIgBjD,EAAKL,MAAMyC,OAJ3B,sCAKuB,CAAEc,KAAM,YAC3BC,KAAK,SAAAC,GAAG,OAAIpD,EAAKC,SAAS,CAACK,OAAQ8C,EAAIC,KAAKC,SAC5CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,WAM5BC,eAAiB,SAACnB,EAAOoB,EAAOjB,GAAf,OAAyB3C,EAAKC,SAAS,CAACmC,OAAQO,6EAGhE,OACCtD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACCwD,KAAM,aACNH,MAAOtC,KAAKV,MAAMwC,WAClB2B,SAAUzD,KAAKkC,aACfwB,kBAAkB,oBAClBC,WAAW,IAEZ3E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CACAwD,KAAK,SACLiB,kBAAkB,SAClBpB,MAAOtC,KAAKV,MAAMyC,OAClB0B,SAAUzD,KAAKsD,gBAEdtE,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAUqD,MAAO,EAAGwB,YAAY,MAChC9E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAUqD,MAAO,GAAIwB,YAAY,OACjC9E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAUqD,MAAO,GAAIwB,YAAY,OACjC9E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAUqD,MAAO,GAAIwB,YAAY,OACjC9E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAUqD,MAAO,GAAIwB,YAAY,QAElC9E,EAAAC,EAAAC,cAAA,WACCc,KAAKV,MAAMW,OAAO8D,OAAS,EAC3B/E,EAAAC,EAAAC,cAAC8E,EAAD,CAAc/D,OAAQD,KAAKV,MAAMW,SAClC,aAxDiB2B,aCiBNqC,mLAhBZ,OACCjF,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,KACCD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACiF,EAAD,MACEnF,EAAAC,EAAAC,cAAA,OAAKkF,UAAU,OACjBpF,EAAAC,EAAAC,cAACmF,EAAD,gBAPYC,IAAM1C,WCMJ2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.9bccbc57.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from 'material-ui/AppBar';\r\n\r\n\r\n\r\nconst NavBar = () => <AppBar title=\"PixaBay Image Finder\" />;\r\n\r\n\r\nexport default NavBar;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport Flatbutton from 'material-ui/FlatButton';\r\n\r\nclass ImageResults extends Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t\tcurrentImg: ''\r\n\t}\r\n\r\n\thandleOpen = (img) => {\r\n\t\tthis.setState({open:true, currentImg: img});\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({open:false});\r\n\t}\r\n\r\n\trender() {\r\n\tlet imageListContent;\r\n\tconst { images } = this.props;\r\n\r\n\tif(images) {\r\n\t\timageListContent = (\r\n\t\t\t<GridList cols={3}>\r\n\t\t\t\t{images.map(img => (\r\n\t\t\t\t\t<GridTile\r\n\t\t\t\t\t\ttitle={img.tags}\r\n\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\tsubtitile={\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tby <strong>{img.user}</strong>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tactionIcon= {\r\n\t\t\t\t\t\t\t<IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n\t\t\t\t\t\t\t\t<ZoomIn color=\"white\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t} >\r\n\t\t\t\t\t\t<img src={img.largeImageURL} alt=\"\"/>\r\n\t\t\t\t\t</GridTile>\r\n\t\t\t\t))}\r\n\t\t\t</GridList>\r\n\t\t)\r\n\t} else {\r\n\t\timageListContent = null;\r\n\t}\r\n\r\n\tconst actions = [\r\n\t\t<Flatbutton label=\"Close\" primary={true} onClick={this.handleClose}/>\r\n\t]\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{imageListContent}\r\n\t\t\t\t<Dialog \r\n\t\t\t\t\tactions={actions}\r\n\t\t\t\t\tmodal={false}\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonRequestClose={this.handleClose}>\r\n\t\t\t\t\t<img src={this.state.currentImg} alt=\"\" style={{width: '100%'}} />\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nImageResults.propTypes = {\r\n\timages: PropTypes.array.isRequired\r\n}\r\nexport default ImageResults;","import React, { Component } from 'react'\r\nimport TextField from 'material-ui/TextField';\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport axios from 'axios';\r\nimport ImageResults from '../image-results/ImageResults';\r\n\r\nclass Search extends Component {\r\n\tstate = {\r\n\t\tsearchText: '',\r\n\t\tamount: 15,\r\n\t\tapiUrl: 'https://pixabay.com/api',\r\n\t\tapiKey: '12324870-773a947bfc13ac235a806c000',\r\n\t\timages: []\r\n\t}\r\n\r\n\tonTextChange = (event) => {\r\n\t\tconst val = event.target.value;\r\n\t\tthis.setState({[event.target.name]: event.target.value}, () => {\r\n\t\t\tif(val === '') {\r\n\t\t\t\tthis.setState({images:[]});\r\n\t\t\t} else {\r\n\t\t\t\taxios.get(`${this.state.apiUrl}\r\n\t\t\t\t\t\t\t\t/?key=${this.state.apiKey}\r\n\t\t\t\t\t\t\t\t&q=${this.state.searchText}\r\n\t\t\t\t\t\t\t\t&image_type=photo\r\n\t\t\t\t\t\t\t\t&per_page=${this.state.amount}\r\n\t\t\t\t\t\t\t\t&safesearch=true`, { mode: 'no-cors' })\r\n\t\t\t\t\t\t\t.then(res => this.setState({images: res.data.hits}))\r\n\t\t\t\t\t\t\t.catch(err => console.log);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\r\n\tonAmountChange = (event, index, value) => this.setState({amount: value});\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tname= \"searchText\"\r\n\t\t\t\t\tvalue={this.state.searchText}\r\n\t\t\t\t\tonChange={this.onTextChange}\r\n\t\t\t\t\tfloatingLabelText=\"Search For Images\"\r\n\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<SelectField\r\n\t\t\t\tname=\"amount\"\r\n\t\t\t\tfloatingLabelText=\"Amount\"\r\n\t\t\t\tvalue={this.state.amount}\r\n\t\t\t\tonChange={this.onAmountChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem value={5} primaryText=\"5\" />\r\n\t\t\t\t\t<MenuItem value={10} primaryText=\"10\" />\r\n\t\t\t\t\t<MenuItem value={15} primaryText=\"15\" />\r\n\t\t\t\t\t<MenuItem value={30} primaryText=\"30\" />\r\n\t\t\t\t\t<MenuItem value={50} primaryText=\"50\" />\r\n\t\t\t\t</SelectField>\r\n\t\t\t\t<br/>\r\n\t\t\t\t{this.state.images.length > 0 ? \r\n\t\t\t\t(<ImageResults images={this.state.images} />) :\r\n\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Search;","import React from 'react';\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport NavBar from './components/navbar/NavBar';\nimport Search from './components/search/Search';\n\nclass App extends React.Component  {\n  render() {\n   return (\n   \t<MuiThemeProvider>\n   \t\t<div> \n   \t\t\t<NavBar />\n        <div className=\"hhh\">\n   \t\t\t<Search />\n        </div>\n   \t\t</div>\n\n\n   \t</MuiThemeProvider>\n\n   \t);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}